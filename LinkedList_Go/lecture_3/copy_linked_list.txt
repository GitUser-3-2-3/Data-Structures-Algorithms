Initial State (after previous functions):
Original: A → A' → B → B' → C → C' → null
           ↑     ↑     ↑
        where A' is copy of A, B' is copy of B, etc.

Step-by-Step Execution:
1. Create dummyNode (-1) and set res = dummyNode
   dummyNode(-1) → ?
   res = dummyNode

2. First iteration (temp = A):
   - res.Next = A.Next (which is A')
   - res = res.Next (now res points to A')
   - temp.Next = A.Next.Next (reconnect A to B)
   - temp = temp.Next (move to B)
   
   dummyNode(-1) → A' → ?
   Original list: A → B → B' → C → C' → null

3. Second iteration (temp = B):
   - res.Next = B.Next (which is B')
   - res = res.Next (now res points to B')
   - temp.Next = B.Next.Next (reconnect B to C)
   - temp = temp.Next (move to C)
   
   dummyNode(-1) → A' → B' → ?
   Original list: A → B → C → C' → null

4. Third iteration (temp = C):
   - res.Next = C.Next (which is C')
   - res = res.Next (now res points to C')
   - temp.Next = C.Next.Next (reconnect C to null)
   - temp = temp.Next (now temp is null, loop ends)
   
   dummyNode(-1) → A' → B' → C' → null
   Original list: A → B → C → null

5. Return dummyNode.Next (which is A')
   Result: A' → B' → C' → null